{"version":3,"sources":["Calendar.tsx"],"names":["NUMBER_OF_MONTHS","MONTH_HEIGHT","INITIAL_LIST_SIZE","VIEWABLE_RANGE_OFFSET","VIEWABILITY_CONFIG","waitForInteraction","itemVisiblePercentThreshold","minimumViewTime","Calendar","React","Component","constructor","props","_data","index","length","monthHeight","offset","_item","String","info","viewableItemsChanged","renderAllMonths","viewableItems","firstViewableItem","l","lastViewableItem","firstViewableIndex","lastViewableIndex","state","setState","date","startDate","endDate","newStartDate","newEndDate","disableRange","undefined","newRange","onChange","ref","listReference","calendarListRef","months","firstMonthToRender","numberOfMonths","firstMonth","lastMonth","clone","add","toDate","endOf","monthIndex","diff","month","year","monthNames","handlePressDay","theme","showWeekdays","showMonthTitle","locale","dayNames","firstDayMonday","renderDayContent","markedDays","minDate","maxDate","disabledDays","disableOffsetDays","viewableRangeOffset","Date","initialScrollIndex","UNSAFE_componentWillMount","startingMonth","start","end","Array","firstMonthIndex","getMonthIndex","UNSAFE_componentWillReceiveProps","nextProps","nextStartDate","scrollToIndex","shouldComponentUpdate","nextState","render","initialListSize","isWeb","Platform","OS","initialNumToRender","getItemLayout","handleViewableItemsChange","keyExtractor","renderMonth","setReference","format"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { FlatList, Platform } from 'react-native';\nimport moment from 'moment';\n\nimport Month from './Month';\nimport { isValidDate } from '../utils/date';\nimport { CalendarProps, ViewableItemsType } from '../types';\n\ninterface State {\n  firstMonthToRender: Date;\n  months: any[];\n  firstViewableIndex: number;\n  lastViewableIndex: number;\n  initialScrollIndex: number;\n  startDate?: Date;\n  endDate?: Date;\n}\n\nconst NUMBER_OF_MONTHS = 12;\nconst MONTH_HEIGHT = 370;\nconst INITIAL_LIST_SIZE = 2;\nconst VIEWABLE_RANGE_OFFSET = 5;\n\nconst VIEWABILITY_CONFIG = {\n  waitForInteraction: true,\n  itemVisiblePercentThreshold: 10,\n  minimumViewTime: 32,\n};\n\nexport default class Calendar extends React.Component<CalendarProps, State> {\n  static defaultProps = {\n    numberOfMonths: NUMBER_OF_MONTHS,\n    startingMonth: moment().format('YYYY-MM-DD'),\n    initialListSize: INITIAL_LIST_SIZE,\n    showWeekdays: true,\n    showMonthTitle: true,\n    theme: {},\n    locale: 'en',\n    monthNames: [],\n    dayNames: [],\n    disableRange: false,\n    firstDayMonday: false,\n    monthHeight: MONTH_HEIGHT,\n    disableOffsetDays: false,\n    viewableRangeOffset: VIEWABLE_RANGE_OFFSET,\n  };\n\n  constructor(props: CalendarProps) {\n    super(props);\n\n    this.state = {\n      firstMonthToRender: new Date(),\n      months: [],\n      initialScrollIndex: 0,\n      startDate: undefined,\n      endDate: undefined,\n      firstViewableIndex: 0,\n      lastViewableIndex: INITIAL_LIST_SIZE + props.viewableRangeOffset!,\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    const { numberOfMonths, startingMonth, startDate, endDate } = this.props;\n    let { firstMonthToRender } = this.state;\n\n    if (startingMonth && isValidDate(new Date(startingMonth))) {\n      firstMonthToRender = moment(startingMonth, 'YYYY-MM-DD').toDate();\n    }\n\n    let start: Date | undefined;\n\n    if (startDate && isValidDate(new Date(startDate))) {\n      start = moment(startDate, 'YYYY-MM-DD').toDate();\n\n      if (\n        start >\n        moment(firstMonthToRender).add(numberOfMonths, 'months').toDate()\n      ) {\n        start = undefined;\n      }\n    }\n\n    const end =\n      endDate && isValidDate(new Date(endDate))\n        ? moment(endDate, 'YYYY-MM-DD').toDate()\n        : undefined;\n\n    const months = new Array(numberOfMonths);\n\n    let firstMonthIndex = 0;\n\n    if (start) {\n      const monthIndex = this.getMonthIndex(start, months, firstMonthToRender);\n      if (monthIndex !== null) {\n        firstMonthIndex = monthIndex;\n      }\n    }\n\n    this.setState({\n      firstMonthToRender,\n      initialScrollIndex: firstMonthIndex,\n      months,\n      startDate: start,\n      endDate: end,\n    });\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: CalendarProps) {\n    const { startDate, months, firstMonthToRender } = this.state;\n    const nextStartDate =\n      nextProps.startDate && nextProps.startDate instanceof Date\n        ? nextProps.startDate\n        : undefined;\n    const endDate =\n      nextProps.endDate && nextProps.endDate instanceof Date\n        ? nextProps.endDate\n        : undefined;\n\n    if (startDate !== nextStartDate || this.state.endDate !== endDate) {\n      this.setState(\n        {\n          startDate: nextStartDate,\n          endDate,\n        },\n        () => {\n          if (\n            this.listReference &&\n            nextStartDate &&\n            startDate !== nextStartDate\n          ) {\n            const monthIndex = this.getMonthIndex(\n              nextStartDate,\n              months,\n              firstMonthToRender\n            );\n            if (monthIndex !== null) {\n              this.listReference.scrollToIndex({ index: monthIndex });\n            }\n          }\n        }\n      );\n    }\n  }\n\n  shouldComponentUpdate(nextProps: CalendarProps, nextState: State): boolean {\n    return (\n      this.state.months.length !== nextState.months.length ||\n      this.state.startDate !== nextState.startDate ||\n      this.state.firstViewableIndex !== nextState.firstViewableIndex ||\n      this.state.lastViewableIndex !== nextState.lastViewableIndex ||\n      this.state.endDate !== nextState.endDate ||\n      this.props.minDate !== nextProps.minDate ||\n      this.props.maxDate !== nextProps.maxDate ||\n      this.props.startingMonth !== nextProps.startingMonth ||\n      this.props.renderDayContent !== nextProps.renderDayContent\n    );\n  }\n\n  private listReference?: FlatList<any> | null | undefined;\n\n  getItemLayout = (\n    _data: any,\n    index: number\n  ): { length: number; offset: number; index: number } => ({\n    length: this.props.monthHeight,\n    offset: this.props.monthHeight * index,\n    index,\n  });\n\n  keyExtractor = (_item: any, index: number): string => String(index);\n\n  handleViewableItemsChange = (info: ViewableItemsType) => {\n    if (this.props.viewableItemsChanged) {\n      this.props.viewableItemsChanged(info);\n    }\n\n    if (this.props.renderAllMonths) {\n      return;\n    }\n\n    const { viewableItems } = info;\n\n    if (viewableItems.length > 0) {\n      const {\n        0: firstViewableItem,\n        length: l,\n        [l - 1]: lastViewableItem,\n      } = viewableItems;\n\n      const { firstViewableIndex, lastViewableIndex } = this.state;\n      if (\n        firstViewableIndex !== firstViewableItem.index ||\n        lastViewableIndex !== lastViewableItem.index\n      ) {\n        this.setState({\n          firstViewableIndex: firstViewableItem.index!,\n          lastViewableIndex: lastViewableItem.index! + VIEWABLE_RANGE_OFFSET,\n        });\n      }\n    }\n  };\n\n  handlePressDay = (date: Date) => {\n    const { startDate, endDate } = this.state;\n    let newStartDate;\n    let newEndDate;\n\n    if (this.props.disableRange) {\n      newStartDate = date;\n      newEndDate = undefined;\n    } else if (startDate) {\n      if (endDate) {\n        newStartDate = date;\n        newEndDate = undefined;\n      } else if (date < startDate!) {\n        newStartDate = date;\n      } else if (date > startDate!) {\n        newStartDate = startDate;\n        newEndDate = date;\n      } else {\n        newStartDate = date;\n        newEndDate = date;\n      }\n    } else {\n      newStartDate = date;\n    }\n\n    const newRange = {\n      startDate: newStartDate as Date,\n      endDate: newEndDate,\n    };\n\n    this.setState(newRange, () => this.props.onChange(newRange));\n  };\n\n  setReference = (ref: any) => {\n    if (ref) {\n      this.listReference = ref;\n      if (this.props.calendarListRef) {\n        this.props.calendarListRef(ref);\n      }\n    }\n  };\n\n  getMonthIndex = (date: Date, months: any[], firstMonthToRender: Date) => {\n    const { numberOfMonths } = this.props;\n\n    const firstMonth = moment(firstMonthToRender);\n    const lastMonth = firstMonth.clone().add(numberOfMonths, 'months');\n\n    if (\n      date >= firstMonth.toDate() &&\n      date <= lastMonth.endOf('month').toDate()\n    ) {\n      const monthIndex = moment(date).diff(firstMonth, 'months');\n\n      if (monthIndex >= 0 && monthIndex <= months.length) {\n        return monthIndex;\n      }\n    }\n\n    return null;\n  };\n\n  renderMonth = ({ index }: { index: number }) => {\n    const { firstMonthToRender } = this.state;\n    const month = moment(firstMonthToRender).add(index, 'months');\n\n    return (\n      <Month\n        month={month.month()}\n        year={month.year()}\n        index={index}\n        firstMonthToRender={this.state.firstMonthToRender}\n        monthNames={this.props.monthNames}\n        onPress={this.handlePressDay}\n        theme={this.props.theme}\n        renderAllMonths={this.props.renderAllMonths}\n        showWeekdays={this.props.showWeekdays}\n        showMonthTitle={this.props.showMonthTitle}\n        locale={this.props.locale}\n        dayNames={this.props.dayNames}\n        height={this.props.monthHeight}\n        firstDayMonday={this.props.firstDayMonday}\n        renderDayContent={this.props.renderDayContent}\n        markedDays={this.props.markedDays}\n        minDate={this.props.minDate}\n        maxDate={this.props.maxDate}\n        startDate={this.state.startDate}\n        endDate={this.state.endDate}\n        disableRange={this.props.disableRange}\n        disabledDays={this.props.disabledDays}\n        disableOffsetDays={this.props.disableOffsetDays}\n        firstViewableIndex={this.state.firstViewableIndex}\n        lastViewableIndex={this.state.lastViewableIndex}\n        viewableRangeOffset={this.props.viewableRangeOffset!}\n      />\n    );\n  };\n\n  render() {\n    const { numberOfMonths, initialListSize } = this.props;\n    const isWeb = Platform.OS === 'web';\n    const initialNumToRender = isWeb ? numberOfMonths : initialListSize;\n\n    return (\n      <FlatList\n        getItemLayout={!isWeb ? this.getItemLayout : undefined}\n        initialScrollIndex={!isWeb ? this.state.initialScrollIndex : 0}\n        viewabilityConfig={VIEWABILITY_CONFIG}\n        removeClippedSubviews\n        onViewableItemsChanged={this.handleViewableItemsChange}\n        initialNumToRender={initialNumToRender}\n        keyExtractor={this.keyExtractor}\n        renderItem={this.renderMonth}\n        extraData={{\n          ...this.state,\n          minDate: this.props.minDate,\n          maxDate: this.props.maxDate,\n        }}\n        data={this.state.months}\n        ref={this.setReference}\n      />\n    );\n  }\n}\n"]}